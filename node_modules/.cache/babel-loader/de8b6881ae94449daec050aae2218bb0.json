{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{Img}from'react-image';export default function BetterImage(props){////////////////////* Hoisted Variables *////////////\nvar resize=props.resize,source=props.source,quality=props.quality,rotation=props.rotation,blur=props.blur,grayscale=props.grayscale,brightness=props.brightness,contrast=props.contrast,sepia=props.sepia,invert=props.invert,saturate=props.saturate,opacity=props.opacity,hueRotate=props.hueRotate,dropShadow=props.dropShadow,roundCorners=props.roundCorners,border=props.border,matrix=props.matrix,translate=props.translate,scale=props.scale,skew=props.skew,perspective=props.perspective,rotateX=props.rotateX,rotateY=props.rotateY;var fileName=source.split('/').pop();var originalImageType=fileName.split('.').pop();var imgName=fileName.split('.').shift();var resizedImageWidth;var resizedImageHeight;var shadowX;var shadowY;var shadowSize;var shadowColor;var borderColor;var borderThick;var borderLine;var matrix1;var matrix2;var matrix3;var matrix4;var matrix5;var matrix6;var translatePx;var translatePercent;var scaleX;var scaleY;var skewX;var skewY;//////////////////////* Params Organized */////////////////////\nfunction resizeFunc(string){string=string.split(\"x\");resizedImageHeight=string[0];resizedImageWidth=string[1];}function borderImage(string){string=string.split(\",\");borderThick=string[0];borderLine=string[1];borderColor=string[2];}function shadowImg(dropShadow){dropShadow=dropShadow.split(\",\");shadowX=dropShadow[0];shadowY=dropShadow[1];shadowSize=dropShadow[2];shadowColor=dropShadow[3];}function matrixImg(matrix){matrix=matrix.split(\",\");matrix1=matrix[0];matrix2=matrix[1];matrix3=matrix[2];matrix4=matrix[3];matrix5=matrix[4];matrix6=matrix[5];}function translateImg(translate){translate=translate.split(\",\");translatePx=translate[0];translatePercent=translate[1];}function scaleImg(scale){scale=scale.split(\",\");scaleX=scale[0];scaleY=scale[1];}function skewImg(skew){skew=skew.split(\",\");skewX=skew[0];skewY=skew[1];}function convertedImg(imgName,quality,originalImageType){fetch('/api/convert',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({imageName:imgName,quality:quality,originalImageType:originalImageType})});}////////////////////* Dynamic Imports */////////////////////\nfunction importAll(r){var images={};r.keys().map(function(item){images[item.replace('./','')]=r(item);});return images;}var images=importAll(require.context('./convertedImage',false,/\\.(png|jpe?g|webp|svg)$/));/////////////////* Default Chain *//////////////////////////\nfunction chainParameters(){if(resize!=null){resizeFunc(resize);}if(contrast==null)contrast=100;if(sepia==null)sepia=0;if(saturate==null)saturate=100;if(blur==null)blur=0;if(opacity==null)opacity=100;if(brightness==null)brightness=100;if(grayscale==null)grayscale=0;if(rotation==null)rotation=0;if(invert==null)invert=0;if(hueRotate==null)hueRotate=0;if(roundCorners==null)roundCorners=0;if(perspective==null)perspective=0;if(quality==null)quality=100;if(rotateX==null)rotateX=0;if(rotateY==null)rotateY=0;if(dropShadow==null){shadowX=0;shadowY=0;shadowSize=0;shadowColor=\"black\";}else{shadowImg(dropShadow);}if(border==null){borderThick=0;borderLine=\"solid\";borderColor=\"black\";}else{borderImage(border);}if(matrix==null){matrix1=1;matrix2=0;matrix3=0;matrix4=1;matrix5=0;matrix6=0;}else{matrixImg(matrix);}if(translate==null){translatePx=0;translatePercent=0;}else{translateImg(translate);}if(scale==null){scaleX=1;scaleY=1;}else{scaleImg(scale);}if(skew==null){skewX=0;skewY=0;}else{skewImg(skew);}}////////////////////* Render BI */////////////////////\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[chainParameters(),images[\"\".concat(imgName,\".webp\")]?/*#__PURE__*/_jsx(Img,{src:[images[\"\".concat(imgName,\".webp\")],images['placeholder.webp']],style:{filter:\"grayscale(\".concat(grayscale,\"%) blur(\").concat(blur,\"px) brightness(\").concat(brightness,\"%) contrast(\").concat(contrast,\"%) sepia(\").concat(sepia,\"%) invert(\").concat(invert,\"%) saturate(\").concat(saturate,\"%) opacity(\").concat(opacity,\"%) hue-rotate(\").concat(hueRotate,\"deg) drop-shadow(\").concat(shadowX,\"px \").concat(shadowY,\"px \").concat(shadowSize,\"px \").concat(shadowColor,\")\"),transform:\"matrix(\".concat(matrix1,\", \").concat(matrix2,\", \").concat(matrix3,\", \").concat(matrix4,\", \").concat(matrix5,\", \").concat(matrix6,\") translate(\").concat(translatePx,\"px, \").concat(translatePercent,\"%) scale(\").concat(scaleX,\", \").concat(scaleY,\") skew(\").concat(skewX,\"deg, \").concat(skewY,\"deg) rotateX(\").concat(rotateX,\"deg) rotateY(\").concat(rotateY,\"deg) perspective(\").concat(perspective,\"px) rotate(\").concat(rotation,\"deg)\"),width:\"\".concat(resizedImageWidth,\"px\"),height:\"\".concat(resizedImageHeight,\"px\"),borderRadius:\"\".concat(roundCorners,\"px\"),border:\"\".concat(borderThick,\"px \").concat(borderLine,\" \").concat(borderColor)},alt:\"image failed to load\"}):convertedImg(imgName,quality,originalImageType)]});}","map":{"version":3,"sources":["/Users/hyperion/Dev/Codesmith/BetterImage/BetterImage.JS/src/components/BetterImage/BetterImage.js"],"names":["React","Img","BetterImage","props","resize","source","quality","rotation","blur","grayscale","brightness","contrast","sepia","invert","saturate","opacity","hueRotate","dropShadow","roundCorners","border","matrix","translate","scale","skew","perspective","rotateX","rotateY","fileName","split","pop","originalImageType","imgName","shift","resizedImageWidth","resizedImageHeight","shadowX","shadowY","shadowSize","shadowColor","borderColor","borderThick","borderLine","matrix1","matrix2","matrix3","matrix4","matrix5","matrix6","translatePx","translatePercent","scaleX","scaleY","skewX","skewY","resizeFunc","string","borderImage","shadowImg","matrixImg","translateImg","scaleImg","skewImg","convertedImg","fetch","method","headers","body","JSON","stringify","imageName","importAll","r","images","keys","map","item","replace","require","context","chainParameters","filter","transform","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Img } from 'react-image';\n\nexport default function BetterImage(props) {\n\n  ////////////////////* Hoisted Variables *////////////\n  let { resize, source, quality, rotation, blur, grayscale, brightness, contrast, sepia, invert, saturate, opacity, hueRotate, dropShadow, roundCorners, border, matrix, translate, scale, skew, perspective, rotateX, rotateY } = props;\n\n  const fileName = source.split('/').pop();\n  const originalImageType = fileName.split('.').pop();\n  const imgName = fileName.split('.').shift();\n\n  let resizedImageWidth;\n  let resizedImageHeight;\n  let shadowX;\n  let shadowY;\n  let shadowSize;\n  let shadowColor;\n  let borderColor;\n  let borderThick;\n  let borderLine;\n  let matrix1;\n  let matrix2;\n  let matrix3;\n  let matrix4;\n  let matrix5;\n  let matrix6;\n  let translatePx;\n  let translatePercent;\n  let scaleX;\n  let scaleY;\n  let skewX;\n  let skewY;\n\n  //////////////////////* Params Organized */////////////////////\n  function resizeFunc(string) {\n    string = string.split(\"x\");\n    resizedImageHeight = string[0]\n    resizedImageWidth = string[1]\n  }\n\n  function borderImage(string){\n    string = string.split(\",\");\n    borderThick = string[0];\n    borderLine = string[1];\n    borderColor = string[2];\n  }\n  \n  function shadowImg(dropShadow){\n    dropShadow = dropShadow.split(\",\");\n    shadowX = dropShadow[0];\n    shadowY = dropShadow[1];\n    shadowSize = dropShadow[2];\n    shadowColor = dropShadow[3];\n  }\n\n  function matrixImg(matrix){\n    matrix = matrix.split(\",\");\n    matrix1 = matrix[0];\n    matrix2 = matrix[1];\n    matrix3 = matrix[2];\n    matrix4 = matrix[3];\n    matrix5 = matrix[4];\n    matrix6 = matrix[5];\n  }\n\n  function translateImg(translate){\n    translate = translate.split(\",\");\n    translatePx = translate[0];\n    translatePercent = translate[1];\n  }\n\n  function scaleImg(scale){\n    scale = scale.split(\",\");\n    scaleX = scale[0];\n    scaleY = scale[1];\n  }\n\n  function skewImg(skew){\n    skew = skew.split(\",\");\n    skewX = skew[0];\n    skewY = skew[1];\n  }\n\n  function convertedImg(imgName, quality, originalImageType){\n    fetch('/api/convert', {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json' \n         },\n        body: JSON.stringify({\n          imageName: imgName,\n          quality: quality,\n          originalImageType: originalImageType\n        })\n    })\n  }\n\n  ////////////////////* Dynamic Imports */////////////////////\n  function importAll(r) {\n    let images = {};\n    r.keys().map((item) => { images[item.replace('./', '')] = r(item) })\n    return images;\n  }\n\n  const images = importAll(require.context('./convertedImage', false, /\\.(png|jpe?g|webp|svg)$/));\n\n  /////////////////* Default Chain *//////////////////////////\n    function chainParameters(){\n      if (resize != null) {\n        resizeFunc(resize);\n      }\n      if (contrast == null) contrast = 100;\n      if (sepia == null) sepia = 0;\n      if (saturate == null) saturate = 100;\n      if (blur == null) blur = 0;\n      if (opacity == null) opacity = 100;\n      if (brightness == null) brightness = 100;\n      if (grayscale == null) grayscale = 0;\n      if (rotation == null) rotation = 0;\n      if (invert == null) invert = 0; \n      if (hueRotate == null) hueRotate = 0;\n      if (roundCorners == null) roundCorners = 0;\n      if (perspective == null) perspective = 0;\n      if (quality == null) quality = 100;\n      if (rotateX == null) rotateX = 0;\n      if (rotateY == null) rotateY = 0;\n      if (dropShadow == null) {\n        shadowX = 0;\n        shadowY = 0;\n        shadowSize = 0;\n        shadowColor = \"black\";\n      } else {\n        shadowImg(dropShadow);\n      }\n      if (border == null) {\n        borderThick = 0;\n        borderLine = \"solid\";\n        borderColor = \"black\";\n      } else {\n        borderImage(border)\n      }\n      if (matrix == null) {\n        matrix1 = 1;\n        matrix2 = 0;\n        matrix3 = 0;\n        matrix4 = 1;\n        matrix5 = 0;\n        matrix6 = 0;\n      } else {\n        matrixImg(matrix);\n      }\n      if (translate == null) {\n        translatePx = 0;\n        translatePercent = 0;\n      } else {\n        translateImg(translate);\n      }\n      if (scale == null) {\n        scaleX = 1;\n        scaleY = 1;\n      } else {\n        scaleImg(scale)\n      }\n      if (skew == null) {\n        skewX = 0;\n        skewY = 0;\n      } else {\n        skewImg(skew)\n      }\n    }\n    \n  ////////////////////* Render BI */////////////////////\n  return (\n    <div>\n      {chainParameters()}\n      {images[`${imgName}.webp`] ? <Img src={[images[`${imgName}.webp`], images['placeholder.webp']]} style={{filter:`grayscale(${grayscale}%) blur(${blur}px) brightness(${brightness}%) contrast(${contrast}%) sepia(${sepia}%) invert(${invert}%) saturate(${saturate}%) opacity(${opacity}%) hue-rotate(${hueRotate}deg) drop-shadow(${shadowX}px ${shadowY}px ${shadowSize}px ${shadowColor})`, transform: `matrix(${matrix1}, ${matrix2}, ${matrix3}, ${matrix4}, ${matrix5}, ${matrix6}) translate(${translatePx}px, ${translatePercent}%) scale(${scaleX}, ${scaleY}) skew(${skewX}deg, ${skewY}deg) rotateX(${rotateX}deg) rotateY(${rotateY}deg) perspective(${perspective}px) rotate(${rotation}deg)`, width: `${resizedImageWidth}px`, height: `${resizedImageHeight}px`, borderRadius: `${roundCorners}px`, border: `${borderThick}px ${borderLine} ${borderColor}`}} alt=\"image failed to load\"/> : convertedImg(imgName, quality, originalImageType) }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/BetterImage/convertedImage sync nonrecursive //.(png|jpe?g|webp|svg)$","components/BetterImage/convertedImage/avocado.webp","components/BetterImage/convertedImage/cat.webp","components/BetterImage/convertedImage/colors.webp","components/BetterImage/convertedImage/diamond.webp","components/BetterImage/convertedImage/gradient.webp","components/BetterImage/convertedImage/image.webp","components/BetterImage/convertedImage/light.webp","components/BetterImage/convertedImage/placeholder.webp","components/BetterImage/convertedImage/ptable.webp","components/BetterImage/convertedImage/rock.webp","components/BetterImage/convertedImage/table.webp","components/BetterImage/convertedImage/us.webp","components/BetterImage/convertedImage/veg.webp","components/BetterImage/BetterImage.js","components/App/images/avocado.png","components/App/images/cat.png","components/App/images/colors.png","components/App/images/diamond.png","components/App/images/gradient.png","components/App/images/image.png","components/App/images/light.png","components/App/images/ptable.png","components/App/images/rock.png","components/App/images/us.png","components/App/images/veg.png","components/App/App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BetterImage","props","resizedImageWidth","resizedImageHeight","shadowX","shadowY","shadowSize","shadowColor","borderColor","borderThick","borderLine","matrix1","matrix2","matrix3","matrix4","matrix5","matrix6","translatePx","translatePercent","scaleX","scaleY","skewX","skewY","resize","source","quality","rotation","blur","grayscale","brightness","contrast","sepia","invert","saturate","opacity","hueRotate","dropShadow","roundCorners","border","matrix","translate","scale","skew","perspective","rotateX","rotateY","fileName","split","pop","originalImageType","imgName","shift","images","r","item","replace","importAll","require","string","shadowImg","borderImage","matrixImg","translateImg","scaleImg","skewImg","chainParameters","src","style","filter","transform","width","height","borderRadius","alt","fetch","method","headers","body","JSON","stringify","imageName","convertedImg","App","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820d94f0.chunk.js","sourcesContent":["var map = {\n\t\"./avocado.webp\": 18,\n\t\"./cat.webp\": 19,\n\t\"./colors.webp\": 20,\n\t\"./diamond.webp\": 21,\n\t\"./gradient.webp\": 22,\n\t\"./image.webp\": 23,\n\t\"./light.webp\": 24,\n\t\"./placeholder.webp\": 25,\n\t\"./ptable.webp\": 26,\n\t\"./rock.webp\": 27,\n\t\"./table.webp\": 28,\n\t\"./us.webp\": 29,\n\t\"./veg.webp\": 30\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/avocado.1ca1c270.webp\";","module.exports = __webpack_public_path__ + \"static/media/cat.531d35dd.webp\";","module.exports = __webpack_public_path__ + \"static/media/colors.e630d307.webp\";","module.exports = __webpack_public_path__ + \"static/media/diamond.26191819.webp\";","module.exports = __webpack_public_path__ + \"static/media/gradient.b463e0e0.webp\";","module.exports = __webpack_public_path__ + \"static/media/image.ec67f217.webp\";","module.exports = __webpack_public_path__ + \"static/media/light.3be9ea99.webp\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.8d7f11de.webp\";","module.exports = __webpack_public_path__ + \"static/media/ptable.3c6757bb.webp\";","module.exports = __webpack_public_path__ + \"static/media/rock.5de99c59.webp\";","module.exports = __webpack_public_path__ + \"static/media/table.3c6757bb.webp\";","module.exports = __webpack_public_path__ + \"static/media/us.6af5513c.webp\";","module.exports = __webpack_public_path__ + \"static/media/veg.8864ce26.webp\";","import React from 'react';\nimport { Img } from 'react-image';\n\nexport default function BetterImage(props) {\n  ////////////////////* Hoisted Variables *////////////\n  let { resize, source, quality, rotation, blur, grayscale, brightness, contrast, sepia, invert, saturate, opacity, hueRotate, dropShadow, roundCorners, border, matrix, translate, scale, skew, perspective, rotateX, rotateY } = props;\n\n  const fileName = source.split('/').pop();\n  const originalImageType = fileName.split('.').pop();\n  const imgName = fileName.split('.').shift();\n\n  let resizedImageWidth;\n  let resizedImageHeight;\n  let shadowX;\n  let shadowY;\n  let shadowSize;\n  let shadowColor;\n  let borderColor;\n  let borderThick;\n  let borderLine;\n  let matrix1;\n  let matrix2;\n  let matrix3;\n  let matrix4;\n  let matrix5;\n  let matrix6;\n  let translatePx;\n  let translatePercent;\n  let scaleX;\n  let scaleY;\n  let skewX;\n  let skewY;\n\n  //////////////////////* Image Functionality */////////////////////\n  function resizeFunc(string) {\n    string = string.split(\"x\");\n    resizedImageHeight = string[0]\n    resizedImageWidth = string[1]\n  }\n\n  function borderImage(string){\n    string = string.split(\",\");\n    borderThick = string[0];\n    borderLine = string[1];\n    borderColor = string[2];\n  }\n  \n  function shadowImg(dropShadow){\n    dropShadow = dropShadow.split(\",\");\n    shadowX = dropShadow[0];\n    shadowY = dropShadow[1];\n    shadowSize = dropShadow[2];\n    shadowColor = dropShadow[3];\n  }\n\n  function matrixImg(matrix){\n    matrix = matrix.split(\",\");\n    matrix1 = matrix[0];\n    matrix2 = matrix[1];\n    matrix3 = matrix[2];\n    matrix4 = matrix[3];\n    matrix5 = matrix[4];\n    matrix6 = matrix[5];\n  }\n\n  function translateImg(translate){\n    translate = translate.split(\",\");\n    translatePx = translate[0];\n    translatePercent = translate[1];\n  }\n\n  function scaleImg(scale){\n    scale = scale.split(\",\");\n    scaleX = scale[0];\n    scaleY = scale[1];\n  }\n\n  function skewImg(skew){\n    skew = skew.split(\",\");\n    skewX = skew[0];\n    skewY = skew[1];\n  }\n\n  function convertedImg(imgName, quality, originalImageType){\n    fetch('/api/convert', {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json' \n         },\n        body: JSON.stringify({\n          imageName: imgName,\n          quality: quality,\n          originalImageType: originalImageType\n        })\n    })\n  }\n\n  ////////////////////* Import all images in optimized folder */////////////////////\n  function importAll(r) {\n    let images = {};\n    r.keys().map((item) => { images[item.replace('./', '')] = r(item) })\n    return images;\n  }\n\n  const images = importAll(require.context('./convertedImage', false, /\\.(png|jpe?g|webp|svg)$/));\n\n  /////////////////* EPIC DEFAULT CHAIN *//////////////////////////\n    function chainParameters(){\n      // resize (optional)\n      if (resize != null) {\n        resizeFunc(resize);\n      }\n      // contrast (optional)\n      if (contrast == null) contrast = 100;\n      // sepia (optional)\n      if (sepia == null) sepia = 0;\n      // sturate (optional)\n      if (saturate == null) saturate = 100;\n      // blur (optional)\n      if (blur == null) blur = 0;\n      // opacity (optional)\n      if (opacity == null) opacity = 100;\n      // brightness (optional)\n      if (brightness == null) brightness = 100;\n      // grayscale (optional)\n      if (grayscale == null) grayscale = 0;\n      // rotation (optional)\n      if (rotation == null) rotation = 0;\n      // invert (optional)\n      if (invert == null) invert = 0; \n      // hueRotate\n      if (hueRotate == null) hueRotate = 0;\n      // roundCorners\n      if (roundCorners == null) roundCorners = 0;\n      // perspective\n      if (perspective == null) perspective = 0;\n      // quality\n      if (quality == null) quality = 100;\n      // rotateX\n      if (rotateX == null) rotateX = 0;\n      // rotateY\n      if (rotateY == null) rotateY = 0;\n      // dropShadow (optional)\n      if (dropShadow == null) {\n        shadowX = 0;\n        shadowY = 0;\n        shadowSize = 0;\n        shadowColor = \"black\";\n      } else {\n        shadowImg(dropShadow);\n      }\n      // border (optional)\n      if (border == null) {\n        borderThick = 0;\n        borderLine = \"solid\";\n        borderColor = \"black\";\n      } else {\n        borderImage(border)\n      }\n      // matrix (optional)\n      if (matrix == null) {\n        matrix1 = 1;\n        matrix2 = 0;\n        matrix3 = 0;\n        matrix4 = 1;\n        matrix5 = 0;\n        matrix6 = 0;\n      } else {\n        matrixImg(matrix);\n      }\n      // translate (optional)\n      if (translate == null) {\n        translatePx = 0;\n        translatePercent = 0;\n      } else {\n        translateImg(translate);\n      }\n      // scale (optional)\n      if (scale == null) {\n        scaleX = 1;\n        scaleY = 1;\n      } else {\n        scaleImg(scale)\n      }\n      // skew (optional)\n      if (skew == null) {\n        skewX = 0;\n        skewY = 0;\n      } else {\n        skewImg(skew)\n      }\n    }\n    \n  ////////////////////* Render the modifed image component */////////////////////\n  return (\n    <div>\n      {chainParameters()}\n      {images[`${imgName}.webp`] ? <Img src={[images[`${imgName}.webp`], images['placeholder.webp']]} style={{filter:`grayscale(${grayscale}%) blur(${blur}px) brightness(${brightness}%) contrast(${contrast}%) sepia(${sepia}%) invert(${invert}%) saturate(${saturate}%) opacity(${opacity}%) hue-rotate(${hueRotate}deg) drop-shadow(${shadowX}px ${shadowY}px ${shadowSize}px ${shadowColor})`, transform: `matrix(${matrix1}, ${matrix2}, ${matrix3}, ${matrix4}, ${matrix5}, ${matrix6}) translate(${translatePx}px, ${translatePercent}%) scale(${scaleX}, ${scaleY}) skew(${skewX}deg, ${skewY}deg) rotateX(${rotateX}deg) rotateY(${rotateY}deg) perspective(${perspective}px) rotate(${rotation}deg)`, width: `${resizedImageWidth}px`, height: `${resizedImageHeight}px`, borderRadius: `${roundCorners}px`, border: `${borderThick}px ${borderLine} ${borderColor}`}} alt=\"image failed to load\"/> : convertedImg(imgName, quality, originalImageType) }\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/avocado.9f4aca29.png\";","export default __webpack_public_path__ + \"static/media/cat.bed8f65f.png\";","export default __webpack_public_path__ + \"static/media/colors.9e9c89ce.png\";","export default __webpack_public_path__ + \"static/media/diamond.bb26e3d9.png\";","export default __webpack_public_path__ + \"static/media/gradient.a2c313ed.png\";","export default __webpack_public_path__ + \"static/media/image.06e9c233.png\";","export default __webpack_public_path__ + \"static/media/light.ff3699e9.png\";","export default __webpack_public_path__ + \"static/media/ptable.4097028f.png\";","export default __webpack_public_path__ + \"static/media/rock.c16fc743.png\";","export default __webpack_public_path__ + \"static/media/us.8dd24dd9.png\";","export default __webpack_public_path__ + \"static/media/veg.2538e77f.png\";","import React, { Component } from 'react';\nimport BetterImage from '../BetterImage/BetterImage.js';\nimport img1 from './images/avocado.png';\nimport img2 from './images/cat.png';\nimport img3 from './images/colors.png';\nimport img4 from './images/diamond.png';\nimport img5 from './images/gradient.png';\nimport img6 from './images/image.png';\nimport img7 from './images/light.png';\nimport img8 from './images/ptable.png';\nimport img9 from './images/rock.png';\nimport img10 from './images/us.png';\nimport img11 from './images/veg.png';\n\nclass App extends Component {\n  render() { \n    return (\n      <div>\n        <h1> Original Image </h1>\n          <img src={img1} />\n          {/* <img src={img2} />\n          <img src={img3} />\n          <img src={img4} />\n          <img src={img5} />\n          <img src={img6} />\n          <img src={img7} />\n          <img src={img8} />\n          <img src={img9} />\n          <img src={img10} />\n          <img src={img11} />\n          <img src={img12} /> */}\n\n        <h1> BetterImage</h1> \n        <BetterImage\n          source={img1}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img1}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img2}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img3}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img4}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img5}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img6}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img7}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img8}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img9}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img10}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n        <BetterImage\n          source={img11}\n          quality={'80'}// quality optional (default to 100)\n          resize={'600x800'} // ratio optional\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}